<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jee="http://www.springframework.org/schema/jee" xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.1.xsd
                http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
       			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
                http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
                http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<!-- Cargamos las propiedades de los parámetros para el sistema -->
	<bean id="properties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<!-- EL LISTADO DE LAS UBICACIONES DE LOS ARCHIVOS DE CONFIGURACIÓN -->
				<value>file:///${tranquera.configuration.dir}/jdbc.properties</value>
				<value>file:///${tranquera.configuration.dir}/configuration.properties</value>
			</list>
		</property>
	</bean>

	<!-- Cargamos las propiedades que tienen los mensaje del sistema -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="cacheSeconds" value="600" />
		<property name="basenames">
			<list>
				<value>file:///${tranquera.configuration.dir}/messages/messages</value>
			</list>
		</property>
	</bean>

	<bean id="messageLocale" class="java.util.Locale" lazy-init="false" depends-on="properties">
		<constructor-arg index="0" value="${locale.languaje}" />
		<constructor-arg index="1" value="${locale.country}" />
	</bean>

	<bean id="messageService" class="com.common.util.business.service.impl.MessageServiceImpl" lazy-init="false" depends-on="messageSource, messageLocale">
		<property name="resources" ref="messageSource" />
		<property name="locale" ref="messageLocale" />
	</bean>

	<bean id="notificacions" class="com.common.swing.view.notification.Notificaction" lazy-init="false" depends-on="messageService">
		<property name="messageService" ref="messageService" />
	</bean>

	<!-- Cargamos la configuración del LOG4J -->
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass" value="org.springframework.util.Log4jConfigurer" />
		<property name="targetMethod" value="initLogging" />
		<property name="arguments">
			<list>
				<value>file:///${tranquera.configuration.dir}/log4j.properties
				</value>
			</list>
		</property>
	</bean>

	<!-- La lectura de las clases de los DAOs, los servicios y las vistas -->
	<context:annotation-config />
	<context:component-scan base-package="com.project.tranquera.*" />

	<!-- Creamos la conexión, la sessionFactory y el controlador de transacciones a la base de datos -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" depends-on="properties">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" depends-on="dataSource">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.*" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${jdbc.dialect}</prop>
				<prop key="hibernate.show_sql">${jdbc.show_sql}</prop>
				<prop key="hibernate.format_sql">${jdbc.format_sql}</prop>
				<prop key="hibernate.connection.pool_size">${jdbc.pool_size}</prop>
				<prop key="hibernate.bytecode.use_reflection_optimizer">${jdbc.use_reflection_optimizer}</prop>
				<prop key="hibernate.hbm2ddl.auto">${jdbc.hbm_to_ddl}</prop>
			</props>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<aop:aspectj-autoproxy />
	<tx:annotation-driven transaction-manager="transactionManager" />

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" read-only="false" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false" />
			<tx:method name="remove*" propagation="REQUIRED" read-only="false" />
			<tx:method name="delete*" propagation="REQUIRED" read-only="false" />
			<tx:method name="execute*" propagation="REQUIRED" read-only="false" />
			<tx:method name="*" propagation="REQUIRED" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="baseService" expression="execution(* com.project.tranquera.business.service.impl.*Service.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="baseService" />
	</aop:config>

	<bean id="loadListenerContext" class="com.common.util.business.holder.ApplicationContextLoader" />
</beans>